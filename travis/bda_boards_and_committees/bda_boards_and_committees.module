<?php

/**
 * First Exercise with OPIN
 */

function bda_boards_and_committees_menu(){

	$items['form/boards-committees-expression-interest'] = array(

		'title' => 'Boards and Committees Expression of Interest Form',
		'description' => 'Expression of Interest Form!',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('bda_boards_and_committees_form'),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,

	);
	return $items;
}

function bda_boards_and_committees_form($form, &$form_state){
	$form = array();

	// First Name Field
	$form['first_name'] = array(
		'#type' => 'textfield',
		'#title' => t('First Name'),
		'#maxlength' => 20,
		'#required' => TRUE,
	);

	// Last Name Field
	$form['last_name'] = array(
		'#type' => 'textfield',
		'#title' => t('Last Name'),
		'#maxlength' => 20,
		'#required' => TRUE,
	);

	// Address Field
	$form['address'] = array(
		'#type' => 'bda_forms_address',
		'#title' => t('Home/Business Address'),
		'#required' => TRUE,
	);

	// Telephone Field
	$form['telephone'] = array(
		'#type' => 'textfield',
		'#title' => t('Telephone'),
		'#required' => TRUE,
	);


	// Create variable which houses an array of the contact methods
	$conMethod = array(0 => t('Telephone'), 1 => t('Email'));

	// Create radios which populate based on the #conMethod variable above
	$form['method_of_contact'] = array(
		'#type' => 'radios',
		'#title' => t('Preferred method of contact'),
		'#options' => array(
			0 => t('Telephone'),
			1 => t('Email'),
		),
		'#required' => TRUE,
	);

	// Plain text header to separate
	$form['info'] = array(
		'#markup' => '<h1>Boards and Committees Information</h1>',
	);

	$xml = simplexml_load_file(drupal_get_path('module', 'bda_boards_and_committees') . '/xml/boards.xml');

	$boardOptions = array();
	$boardKeys = array();
	foreach ($xml->records->record as $record){
		$boardKeys[] = $record->ID;
		$boardOptions+= array_fill_keys($boardKeys, ''.$record->Board);
	};

	//Callback function to calculate the total number of staff
	function bID_callback($form, $form_state) {
		return $form['boardID'];
	}

	// Create dropdown which pulls entries from the BOARDS taxonomy
	$form['choose_board'] = array(
		'#type' => 'select',
		'#title' => t('Select the board or committe you would like to serve on'),
		'#options' => $boardOptions,
		'#required' => 'TRUE',
		'#ajax' => array(
			'callback' => 'bID_callback',
			'wrapper' => 'replace_bID_div',
		),
	);

	$form['boardID'] = array(
		'#type' => 'hidden',
		'#title' => t('Board ID'),
		'#value' => $form_state['values']['choose_board'],
		'#prefix' => '<div id="replace_bID_div">',
		'#suffix' => '</div>',
	);




	// Certifications Field
	$form['certs'] = array(
		'#type' => 'textarea',
		'#title' => t('Certifications, Awards, Degrees etc.'),
		'#required' => TRUE,
	);

	// Why you want to serve Field
	$form['why'] = array(
		'#type' => 'textarea',
		'#title' => t('Please state why you want to serve on a Government Board or Committee'),
		'#required' => TRUE,
	);

	$form['govVenID'] = array(
		'#type' => 'textfield',
		'#title' => t('Government Vendor ID (if known):'),
		'#prefix' => t('If you have previously served on a board, please provide details below:'),
	);











	if (empty($form_state['num_bInfo'])) {
		$form_state['num_bInfo'] = 1;
	}
	$id = drupal_html_id('bInfo-fieldset-wrapper');

	$form['bInfo'] = array(
		'#type' => 'fieldset',
		'#title' => t('Previous Board Information'),
		'#prefix' => '<div id="' . $id . '">',
		'#suffix' => '</div>',
		'#attributes' => array('class' => array('bda-forms-template')),
		'#tree' => TRUE,
	);

	for ($i = 1; $i <= $form_state['num_bInfo']; $i++) {
		$form['bInfo'][$i] = array(
			'#type' => 'fieldset',
		);

		$form['bInfo'][$i]['bName'] = array(
			'#type' => 'textfield',
			'#title' => t('Board Name'),
		);

		$form['bInfo'][$i]['yName'] = array(
			'#type' => 'textfield',
			'#title' => t('Your Role'),
		);

		$form['bInfo'][$i]['beginDate'] = array(
			'#type' => 'date_popup',
			'#title' => t('Began Serving Date:'),
			'#date_format' => 'd M Y',
			'#date_year_range' => '-60:+0',
			'#date_label_position' => '',
		);

		$form['bInfo'][$i]['endDate'] = array(
			'#type' => 'date_popup',
			'#title' => t('Ended Serving Date:'),
			'#date_format' => 'd M Y',
			'#date_year_range' => '-60:+0',
			'#date_label_position' => '',
		);

	}

	$form['bInfo']['add_bInfo'] = array(
		'#type' => 'submit',
		'#value' => t('Add another board'),
		'#submit' => array('bda_forms_bInfo_add_bInfo'),
		'#ajax' => array(
			'callback' => 'bda_forms_bInfo_add_more_callback',
			'wrapper' => $id,
		),
		'#limit_validation_errors' => array(array($form['#parents'][0])),
	);

	if ($form_state['num_bInfo'] > 1) {
		$form['bInfo']['remove_bInfo'] = array(
			'#type' => 'submit',
			'#value' => t('Remove last board'),
			'#submit' => array('bda_forms_bInfo_remove_bInfo'),
			'#ajax' => array(
				'callback' => 'bda_forms_bInfo_add_more_callback',
				'wrapper' => $id,
			),
			'#limit_validation_errors' => array(),
		);
	}












	$form['submit_button'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);



	$form['#bda_forms_submit'] = array(
		'#type' => 'hidden',
		'#value' => array(
			BDA_EMAIL_SUBMIT => array(
				'to' => 'portaladmin@gov.bm',
				'subject' => 'New Submission from the Boards and Committees Expression of Interest Form',
			),
		),
	);


	return $form;
}

function bda_forms_bInfo_add_more_callback($form, $form_state) {
	return $form['bInfo'];
}

function bda_forms_bInfo_add_bInfo($form, &$form_state) {
	$form_state['num_bInfo']++;
	$form_state['rebuild'] = TRUE;
}

function bda_forms_bInfo_remove_bInfo($form, &$form_state) {
	if ($form_state['num_bInfo'] > 1) {
		$form_state['num_bInfo']--;
	}

	$form_state['rebuild'] = TRUE;
}
